class Solution {
    public int countBattleships(char[][] board) {
        int m=board.length;
        int n=board[0].length;
        int[][] visited=new int[m][n];
        int countbattleships=0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(visited[i][j]!=1 && board[i][j]=='X'){
                    dfs(board,i,j,m,n,visited);
                    countbattleships++;
                }
            }
        }
        return countbattleships;
        //x x x x
        //x . . .
        //x . . .
        //x . . . 
    }
    public void dfs(char[][] board,int i,int j,int m,int n,int[][] visited){
        if(i<0 || j<0 || i>=m || j>=n || visited[i][j]==1 || board[i][j]=='.'){
            return;
        }
        visited[i][j]=1;
        dfs(board,i+1,j,m,n,visited);
        dfs(board,i,j+1,m,n,visited);
        dfs(board,i-1,j,m,n,visited);
        dfs(board,i,j-1,m,n,visited);
    }
}
