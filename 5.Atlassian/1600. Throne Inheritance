class Pair{
    private boolean state;
    private List<String> children;
    public Pair(boolean state,List<String> children){
        this.state=state;
        this.children=children;
    }
    public void setstate(){
        state=true;
    }
    public boolean first(){
        return state;
    }
    public List<String> second(){
        return children;
    }
}
class ThroneInheritance {
    HashMap<String,Pair> hm;
    String kingName;
    public ThroneInheritance(String kingName) {
        hm=new HashMap<>();
        hm.put(kingName,new Pair(false,new ArrayList<>()));
        this.kingName=kingName;
    }
    
    public void birth(String parentName, String childName) {
        hm.get(parentName).second().add(childName);
        hm.put(childName,new Pair(false,new ArrayList<>()));
    }
    
    public void death(String name) {
        hm.get(name).setstate();
    }
    
    public List<String> getInheritanceOrder() {
        List<String> ans=new ArrayList<>();
        dfs(ans,kingName);
        return ans;
    }

    public void dfs(List<String> ans,String name){
        if(!hm.get(name).first()){
            ans.add(name);
        }
        for(String child : hm.get(name).second()){
            dfs(ans,child);
        }
    }
}

/**
 * Your ThroneInheritance object will be instantiated and called as such:
 * ThroneInheritance obj = new ThroneInheritance(kingName);
 * obj.birth(parentName,childName);
 * obj.death(name);
 * List<String> param_3 = obj.getInheritanceOrder();
 */
