/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Node{
    int sum,min,max;
    boolean isbst;
    public Node(int sum,int min,int max,boolean isbst){
        this.sum=sum;
        this.min=min;
        this.max=max;
        this.isbst=isbst;
    }
}
class Solution {
    int ans=0;
    public int maxSumBST(TreeNode root) {
        dfs(root);
        return ans;
    }
    public Node dfs(TreeNode root){
        if(root==null){
            return new Node(0,Integer.MAX_VALUE,Integer.MIN_VALUE,true);
        }
        
        if(left.isbst && right.isbst && root.val>left.max && root.val<right.min){
            int bstsum=root.val+left.sum+right.sum;
            ans=Math.max(bstsum,ans);
            return new Node(bstsum,left.min,right.max,true);
        }
        return new Node(0,Integer.MAX_VALUE,Integer.MIN_VALUE,false);
    }
}
