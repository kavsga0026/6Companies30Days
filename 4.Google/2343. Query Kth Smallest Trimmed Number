import java.math.BigInteger;
class Pair{
    String num;
    int idx;
    public Pair(String num,int idx){
        this.num=num;
        this.idx=idx;
    }
    public String getfirst(){
        return num;
    }
    public int getsecond(){
        return idx;
    }
}
class Solution {
    public int[] smallestTrimmedNumbers(String[] nums, int[][] queries) {
        int n=nums.length;
        int q=queries.length;
        int[] ans=new int[queries.length];
        for(int i=0;i<queries.length;i++){
            int k=queries[i][0];
            int trim=queries[i][1];
            List<Pair> pq=new ArrayList<>();
            for(int j=0;j<n;j++){
                String str1=nums[j].substring(nums[j].length()-trim,nums[j].length());
                pq.add(new Pair(str1,j));
            }
            Collections.sort(pq,(a,b)->(a.getfirst().equals(b.getfirst()))? a.getsecond()-b.getsecond() : a.getfirst().compareTo(b.getfirst()));
            ans[i]=pq.get(k-1).getsecond();
        }
        return ans;
    }
}
